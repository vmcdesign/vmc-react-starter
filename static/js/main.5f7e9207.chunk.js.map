{"version":3,"sources":["store/ThemeStore.js","components/Button/Button.js","assets/images/logo.svg","assets/images/logo_white.svg","components/nav-container/NavContainer.js","components/header/Header.js","components/footer/Footer.js","components/layout/Layout.js","GlobalStyles.js","Theme.js","views/Home.js","views/SamplePage.js","App.js","index.js"],"names":["ThemeContext","React","createContext","ThemeStore","children","useState","theme","setTheme","Provider","value","switchTheme","Button","styled","button","props","primary","secondary","borderColor","Navbar","div","Nav","nav","NavMenu","navLinkColor","NavItem","ThemeToggler","NavContainer","useContext","className","to","src","Logo","alt","LogoWhite","role","onClick","SiteHeader","header","bgColor","Header","light","SiteFooter","footer","footerTextColor","footerBgColor","Container","Footer","currentYear","Date","getFullYear","style","padding","LayoutContainer","textColor","Layout","defaults","font","fontSystem","join","fontCode","GlobalStyles","createGlobalStyle","codeStack","themes","default","dark","Theme","Content","Home","title","marginTop","marginBottom","SamplePage","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5f7e9207.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\n// First, create the context to be used throughout the application.\r\nexport const ThemeContext = React.createContext()\r\n\r\n// Create our store, a wrapper that will provide its children access\r\n// to the context we created above.\r\n\r\n/**\r\n * ThemeStore()\r\n * \r\n * Create our store, a wrapper that will provide its children access\r\n * to the context we created above.  Stores the state of our theme in \r\n * the application. \r\n */\r\nexport const ThemeStore = ({ children }) => {\r\n  const initialState = 'light' // Set light theme by default\r\n\r\n  const [theme, setTheme] = useState(initialState) // Store our initial state\r\n  \r\n  const switchTheme = theme => setTheme(theme) // Our theme switcher\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ switchTheme, theme }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  )\r\n}","import styled from 'styled-components'\r\n\r\nexport const Button = styled.button`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin: 0;\r\n  padding: 16px 24px;\r\n  color: ${props =>\r\n    props.primary || props.secondary ? 'white' :\r\n    'inherit'\r\n  };\r\n  font-size: 1rem;\r\n  font-weight: 500;\r\n  background-color: ${props => \r\n    props.primary ? 'hsl(3, 89%, 64%)' : \r\n    props.secondary ?  'hsl(305, 17%, 28%)' : \r\n    'transparent'\r\n  };\r\n  border: ${props => \r\n    props.primary || props.secondary ? '2px solid inherit' : \r\n    '2px solid ' + props.theme.borderColor\r\n  };\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  transition: background-color .2s ease-in-out;\r\n  &:hover {\r\n    background-color: ${props => \r\n      props.primary ? 'hsl(3, 89%, 61%)' : \r\n      props.secondary ? 'hsl(305, 17%, 23%)' : \r\n      'rgba(0, 0, 0, 0.03)'\r\n    };\r\n  };\r\n  &:active {\r\n    outline: 2px solid blue;\r\n  }\r\n`","export default __webpack_public_path__ + \"static/media/logo.a094da82.svg\";","export default __webpack_public_path__ + \"static/media/logo_white.3e8f95b5.svg\";","import React, { useContext } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\n\r\nimport { ThemeContext } from '../../store/ThemeStore'\r\nimport { Button } from '../Button'\r\n\r\nimport Logo from '../../assets/images/logo.svg'\r\nimport LogoWhite from '../../assets/images/logo_white.svg'\r\n\r\nconst Navbar = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  .navbar__brand {\r\n    display: flex;\r\n    align-items: center;\r\n    margin-right: 1rem;\r\n  }\r\n\r\n  .navbar__brand-link {\r\n    position: relative;\r\n    font-size: 1.75rem;\r\n    font-weight: 700;\r\n    line-height: 1;\r\n    top: -3px;\r\n  }\r\n`\r\n\r\nconst Nav = styled.nav`\r\n  display: flex;\r\n  align-items: stretch; /* Centers along Y-axis */\r\n  margin: 0 auto 0 2rem;\r\n  height: 80px;\r\n`\r\n\r\nconst NavMenu = styled.div`\r\n  display: flex;\r\n\r\n  a {\r\n    font-size: 16px;\r\n    line-height: 16px;\r\n    color: ${props => props.theme.navLinkColor};\r\n    transition: all 0.2s ease;\r\n  }\r\n`\r\n\r\nconst NavItem = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0 1rem;\r\n`\r\n\r\nconst ThemeToggler = styled(Button)`\r\n  display: inline-block;\r\n  \r\n  margin: 0 2rem;\r\n  font-weight: 700;\r\n`\r\n\r\nexport const NavContainer = () => {\r\n  const { theme, switchTheme } = useContext(ThemeContext)\r\n\r\n  return (\r\n    <Navbar>\r\n      <Nav>\r\n        <div className=\"navbar__brand\">\r\n          {theme === 'light' ? (\r\n            <Link to=\"/\" className=\"navbar__brand-link\">\r\n              <img src={Logo} alt=\"Site logo\" />\r\n            </Link>  \r\n          ) : (\r\n            <Link to=\"/\" className=\"navbar__brand-link\">\r\n              <img src={LogoWhite} alt=\"Site logo\" />\r\n            </Link>\r\n          )}\r\n        </div>\r\n        <NavMenu role=\"menu\">\r\n          <NavItem role=\"menuitem\" data-title=\"Home\">\r\n            <Link to=\"/home\" className=\"navbar__link\">\r\n              Home\r\n            </Link>\r\n          </NavItem>\r\n          <NavItem role=\"menuitem\" data-title=\"Sample Page\">\r\n            <Link to=\"/sample-page\" className=\"navbar__link\">\r\n              Sample Page\r\n            </Link>\r\n          </NavItem>\r\n        </NavMenu>\r\n      </Nav>\r\n\r\n    {theme === 'light' ? (\r\n      <ThemeToggler onClick={() => switchTheme('dark')}>\r\n        <span>Dark Theme</span>\r\n      </ThemeToggler>\r\n    ) : (\r\n      <ThemeToggler onClick={() => switchTheme('light')}>\r\n        <span>Light Theme</span>\r\n      </ThemeToggler>\r\n    )}\r\n    </Navbar>\r\n  )\r\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { NavContainer } from '../nav-container/NavContainer'\r\n\r\nconst SiteHeader = styled.header`\r\n  width: 100%;\r\n  background-color: ${props => props.theme.bgColor};\r\n  border-bottom: 1px solid;\r\n  border-color: ${props => props.theme.borderColor};\r\n`\r\nexport const Header = () => {\r\n\r\n  return (\r\n    <SiteHeader role=\"banner\">\r\n      <NavContainer light />\r\n    </SiteHeader>\r\n  )\r\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst SiteFooter = styled.footer`\r\n  padding: 1rem 0;\r\n  width: 100%;\r\n  color: ${props => props.theme.footerTextColor};\r\n  background-color: ${props => props.theme.footerBgColor};\r\n  transition: all 0.2s ease;\r\n`\r\n\r\nconst Container = styled.div`\r\n  padding: 0 3rem;\r\n`\r\n\r\nexport const Footer = () => {\r\n  const date = new Date()\r\n  const currentYear = date.getFullYear()\r\n\r\n  return (\r\n    <SiteFooter>\r\n      <Container>\r\n        <p style={{ padding: 0 }}>&copy; {currentYear} | Made with &hearts; by Vanessa Coles (VMC Design) | License: MIT</p>\r\n      </Container>\r\n    </SiteFooter>\r\n  )\r\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Header } from '../header'\r\nimport { Footer } from '../footer'\r\n\r\nconst LayoutContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 100vh;\r\n  height: 100%;\r\n  color: ${props => props.theme.textColor};\r\n  background-color: ${props => props.theme.bgColor};\r\n  transition: all 0.2s ease;\r\n\r\n  main {\r\n    flex: 1;\r\n  }\r\n`\r\n\r\nexport const Layout = ({ children }) => {\r\n  return (\r\n    <LayoutContainer>\r\n      <Header />\r\n      <main>{children}</main>\r\n      <Footer />\r\n    </LayoutContainer>\r\n  )\r\n}","import { createGlobalStyle } from \"styled-components\"\r\n\r\nconst systemStack = [\r\n  '-apple-system', \r\n  'BlinkMacSystemFont', \r\n  'Segoe UI', \r\n  'Roboto', \r\n  'Oxygen', \r\n  'Ubuntu', \r\n  'Cantarell', \r\n  'Fira Sans', \r\n  'Droid Sans', \r\n  'Helvetica Neue', \r\n  'sans-serif'\r\n]\r\n\r\nconst codeStack = [\r\n  'source-code-pro', \r\n  'Menlo', \r\n  'Monaco', \r\n  'Consolas', \r\n  'Courier New',\r\n  'monospace'\r\n]\r\n\r\nconst defaults = {\r\n  font: 'Clear Sans',\r\n  fontSystem: systemStack.join(', '),\r\n  fontCode: codeStack.join(', '),\r\n}\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n  html {\r\n    font-size: 16px;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  *,\r\n  *::before,\r\n  *::after {\r\n    box-sizing: inherit;\r\n  }\r\n\r\n  body {\r\n    margin: 0;\r\n    padding: 0;\r\n    color: hsl(234, 38%, 20%);\r\n    font-size: 1rem;\r\n    font-family: ${defaults.font}, ${defaults.fontSystem};\r\n    font-weight: normal;\r\n    line-height: 1.61;\r\n    background-color: white;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    transition: all 0.3s ease-in-out; \r\n  }\r\n\r\n  code {\r\n    font-family: ${defaults.codeStack};\r\n  }\r\n\r\n  /**\r\n  * Vertical rhythm by Syncope\r\n  * http://nowodzinski.pl/syncope\r\n  */\r\n\r\n  h1, h2, h3 ,h4 h5, h6 {\r\n    font-weight: bold;\r\n    line-height: 1;\r\n  }\r\n\r\n  h1 {\r\n    margin-top: 0;\r\n    padding-top: 0;\r\n    font-size: 2.074rem;\r\n  }\r\n\r\n  h2, \r\n  h1 > small {\r\n    font-size: 1.728rem;\r\n  }\r\n\r\n  h3, \r\n  h2 > small {\r\n    font-size: 1.44rem;\r\n  }\r\n\r\n  h4,\r\n  h3 > small {\r\n    font-size: 1.2rem;\r\n  }\r\n\r\n  h5,\r\n  h4 > small {\r\n    font-size: 1rem;\r\n  }\r\n\r\n  p {\r\n    font-size: 1.00rem;\r\n  }\r\n\r\n  .lead {\r\n    font-size: 1.44rem;\r\n  }\r\n\r\n  .display {\r\n    font-size: 3rem;\r\n  }\r\n\r\n  .display > small {\r\n    font-size: 2.5rem;\r\n  }\r\n\r\n  a {\r\n    display: inline-block;\r\n    font-weight: 500;\r\n    text-decoration: none;\r\n  }\r\n\r\n  img {\r\n    display: block;\r\n    position: relative;\r\n    max-width: 100%;\r\n    width: 100%;\r\n  }\r\n\r\n  .btn, button {\r\n    -webkit-appearance: none;\r\n    appearance: none;\r\n    border: transparent;\r\n  }\r\n`","import React, { useContext } from 'react'\r\nimport { ThemeProvider } from 'styled-components'\r\nimport { ThemeContext } from './store/ThemeStore'\r\n\r\nconst colors = {\r\n  primary: 'hsl(3, 89%, 64%)',\r\n  secondary: 'hsl(305, 17%, 28%)'\r\n}\r\n\r\n/**\r\n * Themes\r\n * \r\n * TODO: Organize the theme property objects a bit better.\r\n */\r\nconst themes = {\r\n  default: {\r\n    primary: colors.primary,\r\n    secondary: colors.secondary,\r\n  },\r\n  light: {\r\n    bgColor: 'white',\r\n    textColor: 'hsl(234, 38%, 20%)',\r\n    borderColor: 'hsl(0, 0%, 89%)',\r\n    navLinkColor: 'hsl(234, 38%, 20%)',\r\n    footerBgColor: 'hsl(210, 20%, 98%)',\r\n    footerTextColor: 'hsl(225, 10%, 60%)',\r\n  },\r\n  dark: {\r\n    bgColor: 'hsl(312, 10%, 10%)',\r\n    textColor: 'hsl(309, 14%, 90%)',\r\n    borderColor: 'hsl(313, 9%, 19%)',\r\n    navLinkColor: 'hsl(0, 0%, 90%)',\r\n    footerBgColor: 'hsl(312, 10%, 9%)',\r\n    footerTextColor: 'hsl(225, 10%, 60%)',\r\n  }\r\n}\r\n\r\n// Our Theme component.  \r\nexport const Theme = ({ children }) => {\r\n  const { theme } = useContext(ThemeContext) // Get the current theme, 'light' or 'dark'\r\n\r\n  return (\r\n    <>\r\n    {/**\r\n     * ThemeProvider gives us access to the 'theme' prop \r\n     * which references our themes. \r\n     * \r\n     * themes - The object created to hold our themes.\r\n     * theme  - References individual theme.\r\n     */}\r\n      <ThemeProvider theme={themes[theme]}>\r\n        {children}\r\n      </ThemeProvider>\r\n    </>\r\n  )\r\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button } from '../components/Button'\r\n\r\n// Container component\r\nconst Container = styled.div`\r\n  margin: 0 auto;\r\n  padding: 3rem 0;\r\n  max-width: 720px;\r\n  width: 100%;\r\n`\r\n\r\n// Content component\r\nconst Content = styled.div`\r\n  margin-bottom: 2rem;\r\n  width: 100%;\r\n`\r\n\r\nexport const Home = props => {\r\n  const title = 'VMC React Starter'\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Content>\r\n          <h1 className=\"display\" style={{ marginTop: '2rem' }}>\r\n            Hello, {title}!\r\n          </h1>  \r\n          \r\n          <p>{title} is a custom Create React App starter template for all your front-end needs.</p>\r\n          <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt \r\n          ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco \r\n          laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in \r\n          voluptate velit esse cillum dolore eu fugiat nulla pariatur.</p>\r\n        </Content>\r\n\r\n        <Button primary \r\n          className=\"btn\" \r\n          style={{ marginBottom: '16px' }}>\r\n            Primary Button\r\n        </Button>\r\n        <Button secondary className=\"btn\">Secondary Button</Button>\r\n      </Container> \r\n    </>\r\n  )\r\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\n// Container component\r\nconst Container = styled.div`\r\n  margin: 0 auto;\r\n  padding: 3rem 0;\r\n  max-width: 720px;\r\n  width: 100%;\r\n`\r\n\r\n// Content component\r\nconst Content = styled.div`\r\n  margin-bottom: 2rem;\r\n  width: 100%;\r\n`\r\n\r\nexport const SamplePage = props => {\r\n  const pageTitle='Sample Page Component'\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Content>\r\n          <h2>{pageTitle}</h2>\r\n        </Content>\r\n      </Container>\r\n    </>\r\n  )\r\n}","import React from 'react'\nimport { \n  BrowserRouter as Router,\n  Route,\n  Switch\n} from 'react-router-dom'\nimport { Layout } from './components/layout'\nimport { GlobalStyles } from './GlobalStyles'\nimport { Theme } from './Theme'\nimport { ThemeStore } from './store/ThemeStore'\n\nimport { Home } from './views/Home'\nimport { SamplePage } from './views/SamplePage'\n\nimport './App.css'\n\nconst App = props => {\n  return (\n    <Router>\n      {/* Theme controller */}\n      <ThemeStore>\n        {/* Theme provider */}\n        <Theme>\n          <GlobalStyles />\n          <div className=\"App\">\n            <Layout>\n              <Switch>\n                <Route exact path=\"/\">\n                  <Home />\n                </Route>\n                <Route path=\"/home\">\n                  <Home />\n                </Route>\n                <Route path=\"/sample-page\">\n                  <SamplePage />\n                </Route>\n              </Switch> \n            </Layout>\n          </div>\n        </Theme>\n      </ThemeStore>\n    </Router>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './vendor'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}